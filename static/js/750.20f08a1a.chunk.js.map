{"version":3,"file":"static/js/750.20f08a1a.chunk.js","mappings":"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","sources":["webpack://react-prj-1/./src/comoponents/profile/mypost/MyPost.module.css?e5df","webpack://react-prj-1/./src/comoponents/profile/mypost/post/Post.module.css?50a5","comoponents/profile/mypost/post/Post.jsx","comoponents/profile/mypost/MyPost.jsx","comoponents/profile/mypost/MyPostContainer.jsx","webpack://react-prj-1/./src/comoponents/profile/profileinfo/Profileinfo.module.css?ce6a","comoponents/profile/profileinfo/ProfileStatusWithHooks.jsx","comoponents/profile/profileinfo/ProfileDataForm.jsx","comoponents/profile/profileinfo/Profileinfo.jsx","comoponents/profile/Profile.jsx","comoponents/profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlocks\":\"MyPost_postsBlocks__254bS\",\"posts\":\"MyPost_posts__lStlw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__q8M18\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={s.item}>\r\n          <img src='https://www.pngitem.com/pimgs/m/560-5603874_product-image-logo-avatar-minimalist-flat-line-hd.png' alt='#'></img>\r\n          {props.message}\r\n        </div>\r\n        <span>like</span> {props.likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilits/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPost.module.css'\r\nimport Post from './post/Post';\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} key={p.id} />)\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n      <div className={s.postsBlocks}>\r\n        <h3>My Posts</h3>\r\n        <AddNewFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    );\r\n})\r\n\r\nconst maxLenght10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name='newPostText' component={Textarea} placeholder='Enter your message' validate={[required, maxLenght10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewFormRedux = reduxForm({form: 'profileAddNewPost'})(AddNewPostForm)\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreater } from '../../../redux/profile-reducer';\r\nimport MyPost from './MyPost';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"imgAva\":\"Profileinfo_imgAva__lWWN1\",\"img\":\"Profileinfo_img__YZ9jP\",\"descriptionBlock\":\"Profileinfo_descriptionBlock__jbrOR\",\"contact\":\"Profileinfo_contact__fcl4f\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.upDateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <b>Status:</b><span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}></input>\r\n          </div>\r\n        } \r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from './Profileinfo.module.css'\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport styles from './../../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            {error && <div className={styles.formErrorSumary}>{error}</div>}\r\n            <div>\r\n                <b>Full name:</b> {createField(\"Full name\", 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Loking for a job:</b> {createField(\"\", 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                <b>My professional sklls:</b> {createField(\"My professional skills\", 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> {createField(\"About me\", 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Сontacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div ley={key} className={s.contact}>\r\n                        <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './Profileinfo.module.css'\r\nimport imageAva from './../../../img/userlogo.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Preloader from '../../common/Preloader';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\nconst Profileinfo = ({profile, status, upDateStatus, isOwner, savePhoto, saveProfile}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  if(!profile){\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length){\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n          <img src={profile.photos.small !== null ? profile.photos.small : imageAva} alt='ava' className={s.imgAva}></img>\r\n          { isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\r\n          { editMode ? <ProfileDataFormReduxForm initialValues={profile} onSubmit={onSubmit} profile={profile}/> \r\n          : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n          <ProfileStatusWithHooks status={status} upDateStatus={upDateStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Loking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional sklls:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Сontacts:</b> {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n  }\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport Preloader from '../common/Preloader';\r\nimport MyPostContainer from './mypost/MyPostContainer';\r\nimport Profileinfo from './profileinfo/Profileinfo';\r\n\r\nconst Profile = (props) => {\r\n  if(!props.profile){\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <Profileinfo profile={props.profile} \r\n          status={props.status} \r\n          upDateStatus={props.upDateStatus} \r\n          isOwner={props.isOwner}\r\n          saveProfile={props.saveProfile}\r\n          savePhoto={props.savePhoto}/>\r\n      <MyPostContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, upDateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component{\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authorizerUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Profile {...this.props} \r\n          profile={this.props.profile} status={this.props.status} \r\n          upDateStatus={this.props.upDateStatus} isOwner={!this.props.match.params.userId}\r\n          savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizerUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth \r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, upDateStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}"],"names":["props","className","s","src","alt","message","likeCount","MyPost","React","postsElements","posts","map","p","id","AddNewFormRedux","onSubmit","values","addPost","newPostText","maxLenght10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreater","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","upDateStatus","onChange","e","currentTarget","value","profile","error","styles","createField","Input","type","Object","keys","contacts","key","ley","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","small","imageAva","target","files","length","initialValues","formData","then","ProfileContainer","userId","this","match","params","authorizerUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}