{"version":3,"file":"static/js/902.e3d507bb.chunk.js","mappings":"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","sources":["webpack://react-prj-1/./src/comoponents/profile/mypost/MyPost.module.css?e5df","webpack://react-prj-1/./src/comoponents/profile/mypost/post/Post.module.css?50a5","comoponents/profile/mypost/post/Post.jsx","comoponents/profile/mypost/MyPost.jsx","comoponents/profile/mypost/MyPostContainer.jsx","webpack://react-prj-1/./src/comoponents/profile/profileinfo/Profileinfo.module.css?ce6a","comoponents/profile/profileinfo/ProfileStatusWithHooks.jsx","comoponents/profile/profileinfo/Profileinfo.jsx","comoponents/profile/Profile.jsx","comoponents/profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlocks\":\"MyPost_postsBlocks__254bS\",\"posts\":\"MyPost_posts__lStlw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__q8M18\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className={s.item}>\r\n          <img src='https://www.pngitem.com/pimgs/m/560-5603874_product-image-logo-avatar-minimalist-flat-line-hd.png' alt='#'></img>\r\n          {props.message}\r\n        </div>\r\n        <span>like</span> {props.likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilits/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPost.module.css'\r\nimport Post from './post/Post';\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} key={p.id} />)\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n      <div className={s.postsBlocks}>\r\n        <h3>My Posts</h3>\r\n        <AddNewFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>\r\n    );\r\n})\r\n\r\nconst maxLenght10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name='newPostText' component={Textarea} placeholder='Enter your message' validate={[required, maxLenght10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewFormRedux = reduxForm({form: 'profileAddNewPost'})(AddNewPostForm)\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreater } from '../../../redux/profile-reducer';\r\nimport MyPost from './MyPost';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"imgAva\":\"Profileinfo_imgAva__lWWN1\",\"img\":\"Profileinfo_img__YZ9jP\",\"descriptionBlock\":\"Profileinfo_descriptionBlock__jbrOR\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.upDateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}></input>\r\n          </div>\r\n        } \r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './Profileinfo.module.css'\r\nimport imageAva from './../../../img/userlogo.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Preloader from '../../common/Preloader';\r\n\r\nconst Profileinfo = ({profile, status, upDateStatus, isOwner, savePhoto}) => {\r\n  if(!profile){\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length){\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n          <img src={profile.photos.small !== null ? profile.photos.small : imageAva} alt='ava' className={s.imgAva}></img>\r\n          { isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\r\n          <ProfileStatusWithHooks status={status} upDateStatus={upDateStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport Preloader from '../common/Preloader';\r\nimport MyPostContainer from './mypost/MyPostContainer';\r\nimport Profileinfo from './profileinfo/Profileinfo';\r\n\r\nconst Profile = (props) => {\r\n  if(!props.profile){\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <Profileinfo profile={props.profile} \r\n          status={props.status} \r\n          upDateStatus={props.upDateStatus} \r\n          isOwner={props.isOwner} \r\n          savePhoto={props.savePhoto}/>\r\n      <MyPostContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, upDateStatus, savePhoto} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authorizerUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Profile {...this.props} \r\n          profile={this.props.profile} status={this.props.status} \r\n          upDateStatus={this.props.upDateStatus} isOwner={!this.props.match.params.userId}\r\n          savePhoto={this.props.savePhoto}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizerUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth \r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, upDateStatus, savePhoto}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","className","s","src","alt","message","likeCount","MyPost","React","postsElements","posts","map","p","id","AddNewFormRedux","onSubmit","values","addPost","newPostText","maxLenght10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreater","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","upDateStatus","onChange","e","currentTarget","value","profile","isOwner","savePhoto","Preloader","photos","small","imageAva","type","target","files","length","ProfileContainer","userId","this","match","params","authorizerUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","auth","isAuth","withRouter"],"sourceRoot":""}