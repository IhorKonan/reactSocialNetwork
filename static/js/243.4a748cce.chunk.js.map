{"version":3,"file":"static/js/243.4a748cce.chunk.js","mappings":"gQACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2B,SCc5I,EAXmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAAA,OAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCCtC,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,WC4BpCC,GAAeC,EAAAA,EAAAA,GAAiB,KAchCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACX,GACpB,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUX,KAAK,iBAAiBY,YAAY,qBAAqBC,SAAU,CAACC,EAAAA,EAAUZ,QAE5G,0BACI,6CAOhB,EAxCgB,SAACR,GAEb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAACC,EAAD,CAAarB,KAAMoB,EAAEpB,KAAiBJ,GAAIwB,EAAExB,IAAZwB,EAAExB,OAC3E0B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,SAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE5B,OAC9DmB,EAAMU,eAK3B,OACI,iBAAK5B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKmB,KAEL,iBAAKpB,UAAWC,EAAAA,SAAhB,WACI,yBAAMwB,KACN,SAAClB,EAAD,CAAqBG,SAVb,SAACmB,GACjBhC,EAAMiC,YAAYD,EAAMD,0BCGhC,GAAgBG,EAAAA,EAAAA,KACdC,EAAAA,EAAAA,KAdoB,SAACd,GACnB,MAAO,CACLC,YAAaD,EAAMC,gBAGA,SAACc,GACtB,MAAO,CACHH,YAAa,SAACF,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,SAOtCO,EAAAA,EAFF,CAGEC,I,gJCpBEC,EAA6B,SAACnB,GAAD,MAAY,CACzCoB,OAAQpB,EAAMqB,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK7C,MAAMyC,QACT,SAACE,GAAD,UAAeE,KAAK7C,SADI,SAAC,KAAD,CAAUK,GAAG,eAHT,GACXyC,EAAAA,WAShC,OAFmCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS","sources":["webpack://react-prj-1/./src/comoponents/dialogs/Dialogs.module.css?d9e8","comoponents/dialogs/dialogItem/DialogsItem.jsx","comoponents/dialogs/message/Message.jsx","comoponents/dialogs/Dialogs.jsx","comoponents/dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__KfbJK\",\"dialogsItems\":\"Dialogs_dialogsItems__PLkjG\",\"active\":\"Dialogs_active__RtnKL\",\"messages\":\"Dialogs_messages__Vvja3\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messege}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utilits/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogsItem from './dialogItem/DialogsItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLenght100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}> \r\n            <div>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLenght100]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      dialogsPage: state.dialogsPage,\r\n    }\r\n  }\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return { \r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n }\r\n\r\nexport default  compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}"],"names":["props","path","id","className","s","to","name","message","maxLenght100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","DialogsItem","messagesElements","messages","m","newMessageBody","value","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}